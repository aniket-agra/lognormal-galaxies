#!/usr/bin/env python26
#============================================================================
# This is the Python script of calculating the Kaiser prediction for
# the monopole and quadrupole of the redshift space power spectrum
# of galaxies generated by the lognormal code. The Kaiser power spectrum
# is given as
# P(k, mu) = P_{gg}(k)+2*f*mu^2*P_{gm}(k)+f^2*mu^4*P_{mm}(k).
# 
# You need to provide the matter power spectrum P_{mm}(k), the galaxy-matter
# cross power spectrum P_{gm}(k), the no. of lines in each file, the linear 
# bias (for calculating the galaxy power spectrum), the logarithmic growth
# rate file f(k) and the number of lines in this file.  
# The output file is named pk_kaiser.dat. It contains three columns - 
# k, P_0(k) and P_2(k).
#
# 15 Mar 2016
# by Aniket Agrawal
#============================================================================


import os
import random
class executable:
	"""A class for running executables"""
	def __init__(self,exename):
		self.exename=exename
#		self.pfname='params.'+self.exename
	def __call__(self,params):
#		pfile=open(self.pfname,'a')
#		for param in params:
#			try:
#				pfile.write(param+'\n')
#			except:
#				if type(param)==int:
#					pfile.write('%d\n' % param)
#				else:
#					pfile.write('%g\n' % param)
#		pfile.close()
#		cmd = 'time ./'+self.exename+' <'+self.pfname
		nparams = len(params)
		paramfname = params[nparams-1]
		pfile=open(paramfname,'w')
		for iparam in range(0,nparams-1):
			try:
				pfile.write(params[iparam]+'\n')
			except:
				if type(params[iparam])==int:
					pfile.write('%d\n' % params[iparam])
				else:
					pfile.write('%g\n' % params[iparam])
		pfile.close()
		cmd = 'time ./'+self.exename+' <'+paramfname
		print cmd
		os.system(cmd)

#-----------------------------------------------------------------------------
# function to read number of lines in the file
#-----------------------------------------------------------------------------
def file_len(fname):
	f=open(fname)
	for i, l in enumerate(f):
		pass
	f.close()
	return i + 1

pkmfname = 'wavenumber_pk.txt'			#name of matter power spectrum file
nmpk = file_len(pkmfname)
cpkfname = 'pk_rmax10000_b1.dat'		#name of galaxy matter cross power spectrum file
ncpk = file_len(cpkfname)
bias = 1.455				
ffname = 'wavenumber_fnu.txt'			#name of f(k) file
nf = file_len(ffname)
p1fname = 'params_kaiser_pk.dat'
executable('aux_codes/kaiser_pk')([pkmfname, nmpk, cpkfname, ncpk, bias, ffname, nf, p1fname])    